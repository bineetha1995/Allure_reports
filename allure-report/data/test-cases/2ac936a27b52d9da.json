{"uid":"2ac936a27b52d9da","name":"User can enter address manually and hit '+ Save & Continue' ","fullName":"excel_value.TestAddressSearch#test_additional_address_entry","historyId":"ce062a5597c851d38ece91a93606afb9","time":{"start":1746646868925,"stop":1746646899112,"duration":30187},"status":"failed","statusMessage":"Failed: Test failed: test_additional_address_entry - Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"button\", name=\"att-logo-icon\")\n  -     - locator resolved to <button type=\"button\" class=\"ant-btn css-1gwfwyx ant-btn-link ant-btn-icon-only\">…</button>\n  -   - attempting click action\n  -     2 × waiting for element to be visible, enabled and stable\n  -       - element is visible, enabled and stable\n  -       - scrolling into view if needed\n  -       - done scrolling\n  -       - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\n  -     - retrying click action\n  -     - waiting 20ms\n  -     2 × waiting for element to be visible, enabled and stable\n  -       - element is visible, enabled and stable\n  -       - scrolling into view if needed\n  -       - done scrolling\n  -       - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\n  -     - retrying click action\n  -       - waiting 100ms\n  -     54 × waiting for element to be visible, enabled and stable\n  -        - element is visible, enabled and stable\n  -        - scrolling into view if needed\n  -        - done scrolling\n  -        - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\n  -      - retrying click action\n  -        - waiting 500ms","statusTrace":"self = <excel_value.TestAddressSearch object at 0x000001D59D02EF10>, page = <Page url='https://qq.att.com/landing'>\n\n    @pytest.mark.flaky(reruns=1, reruns_delay=1)\n    @allure.title(\"User can enter address manually and hit '+ Save & Continue' \")\n    def test_additional_address_entry(self, page):\n        try:\n    \n            test_case_number = 5  # Update test case number as needed\n    \n            with allure.step(f\"Fetching data for Test Case {test_case_number}\"):\n                address_data = read_address_data(test_case_number)\n    \n            with allure.step(\"Navigating to additional address entry page\"):\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n>               page.get_by_role(\"button\", name=\"att-logo-icon\").click()\n\nexcel_value.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:15507: in click\n    self._sync(\nvenv\\Lib\\site-packages\\playwright\\_impl\\_locator.py:160: in click\n    return await self._frame.click(self._selector, strict=True, **params)\nvenv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\nvenv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000001D59CDAB910>\ncb = <function Channel.send.<locals>.<lambda> at 0x000001D59D493880>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for get_by_role(\"button\", name=\"att-logo-icon\")\nE             -     - locator resolved to <button type=\"button\" class=\"ant-btn css-1gwfwyx ant-btn-link ant-btn-icon-only\">…</button>\nE             -   - attempting click action\nE             -     2 × waiting for element to be visible, enabled and stable\nE             -       - element is visible, enabled and stable\nE             -       - scrolling into view if needed\nE             -       - done scrolling\nE             -       - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\nE             -     - retrying click action\nE             -     - waiting 20ms\nE             -     2 × waiting for element to be visible, enabled and stable\nE             -       - element is visible, enabled and stable\nE             -       - scrolling into view if needed\nE             -       - done scrolling\nE             -       - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\nE             -     - retrying click action\nE             -       - waiting 100ms\nE             -     54 × waiting for element to be visible, enabled and stable\nE             -        - element is visible, enabled and stable\nE             -        - scrolling into view if needed\nE             -        - done scrolling\nE             -        - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\nE             -      - retrying click action\nE             -        - waiting 500ms\n\nvenv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:528: TimeoutError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <excel_value.TestAddressSearch object at 0x000001D59D02EF10>, page = <Page url='https://qq.att.com/landing'>\n\n    @pytest.mark.flaky(reruns=1, reruns_delay=1)\n    @allure.title(\"User can enter address manually and hit '+ Save & Continue' \")\n    def test_additional_address_entry(self, page):\n        try:\n    \n            test_case_number = 5  # Update test case number as needed\n    \n            with allure.step(f\"Fetching data for Test Case {test_case_number}\"):\n                address_data = read_address_data(test_case_number)\n    \n            with allure.step(\"Navigating to additional address entry page\"):\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n                page.get_by_role(\"button\", name=\"att-logo-icon\").click()\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n                scroll_down(page)\n    \n            with allure.step(\"Filling additional address details\"):\n                page.get_by_role(\"button\", name=\"Or enter manually\").click()\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n                scroll_down(page)\n                page.get_by_test_id(\"manualFormStreetInput\").fill(address_data[\"STREET\"])\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n                page.get_by_test_id(\"manualFormCityInput\").fill(address_data[\"CITY\"])\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n                page.get_by_test_id(\"formDropdown\").get_by_label(\"State\").click()\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n                page.get_by_text(address_data[\"STATE\"]).click()\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n                page.get_by_test_id(\"manualFormZipInput\").fill(address_data[\"ZIP_CODE\"])\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n                page.get_by_test_id(\"saveAndFindButton\").click()\n                scroll_down(page)\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n                scroll_up(page)\n    \n            with allure.step(\"Validating manual address entry and navigation\"):\n                assert not page.get_by_test_id(\"Remove All\").is_visible(), \"Save & Continue button is still visible\"\n                #assert page.url.startswith(\"https://qq-dev.att.com/address-details\"), \"Navigation to address details page failed\"\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n    \n        except Exception as e:\n>           handle_error(page, \"test_additional_address_entry\", e)\n\nexcel_value.py:285: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\npage = <Page url='https://qq.att.com/landing'>, test_name = 'test_additional_address_entry'\nerror = TimeoutError('Locator.click: Timeout 30000ms exceeded.\\nCall log:\\n  - waiting for get_by_role(\"button\", name=\"att-log...pp-wrapper\">…</div> subtree intercepts pointer events\\n  -      - retrying click action\\n  -        - waiting 500ms\\n')\n\n    def handle_error(page, test_name, error):\n        \"\"\"Handles errors by taking a screenshot, attaching it to Allure, and marking the test as failed.\"\"\"\n        os.makedirs(\"screenshots\", exist_ok=True)  # Ensure the screenshots directory exists\n        screenshot_path = f\"screenshots/{test_name}_error.png\"\n        page.screenshot(path=screenshot_path)\n        allure.attach.file(\n            screenshot_path,\n            name=f\"{test_name} Error Screenshot\",\n            attachment_type=allure.attachment_type.PNG\n        )\n        print(f\"Error during {test_name}: {error}\")\n>       pytest.fail(f\"Test failed: {test_name} - {error}\")\nE       Failed: Test failed: test_additional_address_entry - Locator.click: Timeout 30000ms exceeded.\nE       Call log:\nE         - waiting for get_by_role(\"button\", name=\"att-logo-icon\")\nE         -     - locator resolved to <button type=\"button\" class=\"ant-btn css-1gwfwyx ant-btn-link ant-btn-icon-only\">…</button>\nE         -   - attempting click action\nE         -     2 × waiting for element to be visible, enabled and stable\nE         -       - element is visible, enabled and stable\nE         -       - scrolling into view if needed\nE         -       - done scrolling\nE         -       - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\nE         -     - retrying click action\nE         -     - waiting 20ms\nE         -     2 × waiting for element to be visible, enabled and stable\nE         -       - element is visible, enabled and stable\nE         -       - scrolling into view if needed\nE         -       - done scrolling\nE         -       - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\nE         -     - retrying click action\nE         -       - waiting 100ms\nE         -     54 × waiting for element to be visible, enabled and stable\nE         -        - element is visible, enabled and stable\nE         -        - scrolling into view if needed\nE         -        - done scrolling\nE         -        - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\nE         -      - retrying click action\nE         -        - waiting 500ms\n\nexcel_value.py:60: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"delete_output_dir","time":{"start":1746646754000,"stop":1746646754000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"_verify_url","time":{"start":1746646754000,"stop":1746646754000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"page","time":{"start":1746646754000,"stop":1746646755023,"duration":1023},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_url","time":{"start":1746646754000,"stop":1746646754000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"pytestconfig","time":{"start":1746646754000,"stop":1746646754000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"Failed: Test failed: test_additional_address_entry - Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"button\", name=\"att-logo-icon\")\n  -     - locator resolved to <button type=\"button\" class=\"ant-btn css-1gwfwyx ant-btn-link ant-btn-icon-only\">…</button>\n  -   - attempting click action\n  -     2 × waiting for element to be visible, enabled and stable\n  -       - element is visible, enabled and stable\n  -       - scrolling into view if needed\n  -       - done scrolling\n  -       - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\n  -     - retrying click action\n  -     - waiting 20ms\n  -     2 × waiting for element to be visible, enabled and stable\n  -       - element is visible, enabled and stable\n  -       - scrolling into view if needed\n  -       - done scrolling\n  -       - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\n  -     - retrying click action\n  -       - waiting 100ms\n  -     54 × waiting for element to be visible, enabled and stable\n  -        - element is visible, enabled and stable\n  -        - scrolling into view if needed\n  -        - done scrolling\n  -        - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\n  -      - retrying click action\n  -        - waiting 500ms","statusTrace":"self = <excel_value.TestAddressSearch object at 0x000001D59D02EF10>, page = <Page url='https://qq.att.com/landing'>\n\n    @pytest.mark.flaky(reruns=1, reruns_delay=1)\n    @allure.title(\"User can enter address manually and hit '+ Save & Continue' \")\n    def test_additional_address_entry(self, page):\n        try:\n    \n            test_case_number = 5  # Update test case number as needed\n    \n            with allure.step(f\"Fetching data for Test Case {test_case_number}\"):\n                address_data = read_address_data(test_case_number)\n    \n            with allure.step(\"Navigating to additional address entry page\"):\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n>               page.get_by_role(\"button\", name=\"att-logo-icon\").click()\n\nexcel_value.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:15507: in click\n    self._sync(\nvenv\\Lib\\site-packages\\playwright\\_impl\\_locator.py:160: in click\n    return await self._frame.click(self._selector, strict=True, **params)\nvenv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\nvenv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000001D59CDAB910>\ncb = <function Channel.send.<locals>.<lambda> at 0x000001D59D493880>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for get_by_role(\"button\", name=\"att-logo-icon\")\nE             -     - locator resolved to <button type=\"button\" class=\"ant-btn css-1gwfwyx ant-btn-link ant-btn-icon-only\">…</button>\nE             -   - attempting click action\nE             -     2 × waiting for element to be visible, enabled and stable\nE             -       - element is visible, enabled and stable\nE             -       - scrolling into view if needed\nE             -       - done scrolling\nE             -       - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\nE             -     - retrying click action\nE             -     - waiting 20ms\nE             -     2 × waiting for element to be visible, enabled and stable\nE             -       - element is visible, enabled and stable\nE             -       - scrolling into view if needed\nE             -       - done scrolling\nE             -       - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\nE             -     - retrying click action\nE             -       - waiting 100ms\nE             -     54 × waiting for element to be visible, enabled and stable\nE             -        - element is visible, enabled and stable\nE             -        - scrolling into view if needed\nE             -        - done scrolling\nE             -        - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\nE             -      - retrying click action\nE             -        - waiting 500ms\n\nvenv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:528: TimeoutError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <excel_value.TestAddressSearch object at 0x000001D59D02EF10>, page = <Page url='https://qq.att.com/landing'>\n\n    @pytest.mark.flaky(reruns=1, reruns_delay=1)\n    @allure.title(\"User can enter address manually and hit '+ Save & Continue' \")\n    def test_additional_address_entry(self, page):\n        try:\n    \n            test_case_number = 5  # Update test case number as needed\n    \n            with allure.step(f\"Fetching data for Test Case {test_case_number}\"):\n                address_data = read_address_data(test_case_number)\n    \n            with allure.step(\"Navigating to additional address entry page\"):\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n                page.get_by_role(\"button\", name=\"att-logo-icon\").click()\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n                scroll_down(page)\n    \n            with allure.step(\"Filling additional address details\"):\n                page.get_by_role(\"button\", name=\"Or enter manually\").click()\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n                scroll_down(page)\n                page.get_by_test_id(\"manualFormStreetInput\").fill(address_data[\"STREET\"])\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n                page.get_by_test_id(\"manualFormCityInput\").fill(address_data[\"CITY\"])\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n                page.get_by_test_id(\"formDropdown\").get_by_label(\"State\").click()\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n                page.get_by_text(address_data[\"STATE\"]).click()\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n                page.get_by_test_id(\"manualFormZipInput\").fill(address_data[\"ZIP_CODE\"])\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n                page.get_by_test_id(\"saveAndFindButton\").click()\n                scroll_down(page)\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n                scroll_up(page)\n    \n            with allure.step(\"Validating manual address entry and navigation\"):\n                assert not page.get_by_test_id(\"Remove All\").is_visible(), \"Save & Continue button is still visible\"\n                #assert page.url.startswith(\"https://qq-dev.att.com/address-details\"), \"Navigation to address details page failed\"\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n    \n        except Exception as e:\n>           handle_error(page, \"test_additional_address_entry\", e)\n\nexcel_value.py:285: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\npage = <Page url='https://qq.att.com/landing'>, test_name = 'test_additional_address_entry'\nerror = TimeoutError('Locator.click: Timeout 30000ms exceeded.\\nCall log:\\n  - waiting for get_by_role(\"button\", name=\"att-log...pp-wrapper\">…</div> subtree intercepts pointer events\\n  -      - retrying click action\\n  -        - waiting 500ms\\n')\n\n    def handle_error(page, test_name, error):\n        \"\"\"Handles errors by taking a screenshot, attaching it to Allure, and marking the test as failed.\"\"\"\n        os.makedirs(\"screenshots\", exist_ok=True)  # Ensure the screenshots directory exists\n        screenshot_path = f\"screenshots/{test_name}_error.png\"\n        page.screenshot(path=screenshot_path)\n        allure.attach.file(\n            screenshot_path,\n            name=f\"{test_name} Error Screenshot\",\n            attachment_type=allure.attachment_type.PNG\n        )\n        print(f\"Error during {test_name}: {error}\")\n>       pytest.fail(f\"Test failed: {test_name} - {error}\")\nE       Failed: Test failed: test_additional_address_entry - Locator.click: Timeout 30000ms exceeded.\nE       Call log:\nE         - waiting for get_by_role(\"button\", name=\"att-logo-icon\")\nE         -     - locator resolved to <button type=\"button\" class=\"ant-btn css-1gwfwyx ant-btn-link ant-btn-icon-only\">…</button>\nE         -   - attempting click action\nE         -     2 × waiting for element to be visible, enabled and stable\nE         -       - element is visible, enabled and stable\nE         -       - scrolling into view if needed\nE         -       - done scrolling\nE         -       - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\nE         -     - retrying click action\nE         -     - waiting 20ms\nE         -     2 × waiting for element to be visible, enabled and stable\nE         -       - element is visible, enabled and stable\nE         -       - scrolling into view if needed\nE         -       - done scrolling\nE         -       - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\nE         -     - retrying click action\nE         -       - waiting 100ms\nE         -     54 × waiting for element to be visible, enabled and stable\nE         -        - element is visible, enabled and stable\nE         -        - scrolling into view if needed\nE         -        - done scrolling\nE         -        - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\nE         -      - retrying click action\nE         -        - waiting 500ms\n\nexcel_value.py:60: Failed","steps":[{"name":"Fetching data for Test Case 5","time":{"start":1746646868926,"stop":1746646868930,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Navigating to additional address entry page","time":{"start":1746646868930,"stop":1746646898962,"duration":30032},"status":"broken","statusMessage":"playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"button\", name=\"att-logo-icon\")\n  -     - locator resolved to <button type=\"button\" class=\"ant-btn css-1gwfwyx ant-btn-link ant-btn-icon-only\">…</button>\n  -   - attempting click action\n  -     2 × waiting for element to be visible, enabled and stable\n  -       - element is visible, enabled and stable\n  -       - scrolling into view if needed\n  -       - done scrolling\n  -       - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\n  -     - retrying click action\n  -     - waiting 20ms\n  -     2 × waiting for element to be visible, enabled and stable\n  -       - element is visible, enabled and stable\n  -       - scrolling into view if needed\n  -       - done scrolling\n  -       - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\n  -     - retrying click action\n  -       - waiting 100ms\n  -     54 × waiting for element to be visible, enabled and stable\n  -        - element is visible, enabled and stable\n  -        - scrolling into view if needed\n  -        - done scrolling\n  -        - <div class=\"ant-row ant-row-center ant-row-middle processing-component__spinner css-1gwfwyx\">…</div> from <div class=\"app-wrapper\">…</div> subtree intercepts pointer events\n  -      - retrying click action\n  -        - waiting 500ms\n\n","statusTrace":"  File \"C:\\Users\\bv9653\\my-automation-project\\tests\\excel_value.py\", line 256, in test_additional_address_entry\n    page.get_by_role(\"button\", name=\"att-logo-icon\").click()\n  File \"C:\\Users\\bv9653\\my-automation-project\\tests\\venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 15507, in click\n    self._sync(\n  File \"C:\\Users\\bv9653\\my-automation-project\\tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ^^^^^^^^^^^^^\n  File \"C:\\Users\\bv9653\\my-automation-project\\tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py\", line 160, in click\n    return await self._frame.click(self._selector, strict=True, **params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\bv9653\\my-automation-project\\tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py\", line 488, in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n  File \"C:\\Users\\bv9653\\my-automation-project\\tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 61, in send\n    return await self._connection.wrap_api_call(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\bv9653\\my-automation-project\\tests\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 528, in wrap_api_call\n    raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0}],"attachments":[{"uid":"c5ba10db31d84b44","name":"test_additional_address_entry Error Screenshot","source":"c5ba10db31d84b44.png","type":"image/png","size":36858},{"uid":"84d0e31a03579fc1","name":"stdout","source":"84d0e31a03579fc1.txt","type":"text/plain","size":1618}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":2,"shouldDisplayMessage":true,"attachmentsCount":2},"afterStages":[{"name":"page::0","time":{"start":1746647091571,"stop":1746647091813,"duration":242},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"suite","value":"Address Search Test Suite"},{"name":"tag","value":"flaky(reruns=1, reruns_delay=1)"},{"name":"subSuite","value":"TestAddressSearch"},{"name":"host","value":"INBLR2791"},{"name":"thread","value":"21632-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"excel_value"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["flaky(reruns=1, reruns_delay=1)"]},"source":"2ac936a27b52d9da.json","parameterValues":[]}