{"uid":"12049052d1526377","name":"User can select 'Choose File' to upload","fullName":"excel_value.TestAddressSearch#test_file_upload","historyId":"536b964a28fb8ce1bbae868576a6baf5","time":{"start":1746646899443,"stop":1746646930466,"duration":31023},"status":"failed","statusMessage":"Failed: Test failed: test_file_upload - ElementHandle.set_input_files: ENOENT: no such file or directory, access 'C:\\Users\\bv9653\\my-automation-project\\tests\\qq_import_template.xlsx'","statusTrace":"self = <excel_value.TestAddressSearch object at 0x000001D59D02FE10>, page = <Page url='https://qq.att.com/landing'>\n\n    @pytest.mark.flaky(reruns=1, reruns_delay=1)\n    @allure.title(\"User can select 'Choose File' to upload\")\n    def test_file_upload(self, page):\n        try:\n    \n            test_case_number = 7  # Update test case number as needed\n    \n            with allure.step(\"Navigating to file upload page\"):\n                page.get_by_role(\"button\", name=\"att-logo-icon\").click()\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n    \n    # Upload the file using the actual input element\n            with allure.step(\"Uploading a file\"):\n                file_input = page.query_selector(\"input[type='file']\")  # Adjust selector as needed\n            if file_input:\n>               file_input.set_input_files(\"qq_import_template.xlsx\")\n\nexcel_value.py:336: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:2491: in set_input_files\n    self._sync(\nvenv\\Lib\\site-packages\\playwright\\_impl\\_element_handle.py:204: in set_input_files\n    await self._channel.send(\nvenv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000001D59CDAB910>\ncb = <function Channel.send.<locals>.<lambda> at 0x000001D59D3ED580>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.Error: ElementHandle.set_input_files: ENOENT: no such file or directory, access 'C:\\Users\\bv9653\\my-automation-project\\tests\\qq_import_template.xlsx'\n\nvenv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:528: Error\n\nDuring handling of the above exception, another exception occurred:\n\nself = <excel_value.TestAddressSearch object at 0x000001D59D02FE10>, page = <Page url='https://qq.att.com/landing'>\n\n    @pytest.mark.flaky(reruns=1, reruns_delay=1)\n    @allure.title(\"User can select 'Choose File' to upload\")\n    def test_file_upload(self, page):\n        try:\n    \n            test_case_number = 7  # Update test case number as needed\n    \n            with allure.step(\"Navigating to file upload page\"):\n                page.get_by_role(\"button\", name=\"att-logo-icon\").click()\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n    \n    # Upload the file using the actual input element\n            with allure.step(\"Uploading a file\"):\n                file_input = page.query_selector(\"input[type='file']\")  # Adjust selector as needed\n            if file_input:\n                file_input.set_input_files(\"qq_import_template.xlsx\")\n            else:\n                raise Exception(\"File input element not found.\")\n                #page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n            with allure.step(\"Scrolling down\"):\n                scroll_down(page)  # Scrolls down one screen height\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded  # Wait 5 seconds after scrolling to let the page stabilize\n    \n    # Allow observation time before closing\n            with allure.step(\"Allowing more time for observation\"):\n                page.wait_for_timeout(10000)  # Wait an additional 10 seconds before closing\n    \n    \n        except Exception as e:\n>           handle_error(page, \"test_file_upload\", e)\n\nexcel_value.py:350: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\npage = <Page url='https://qq.att.com/landing'>, test_name = 'test_file_upload'\nerror = Error(\"ElementHandle.set_input_files: ENOENT: no such file or directory, access 'C:\\\\Users\\\\bv9653\\\\my-automation-project\\\\tests\\\\qq_import_template.xlsx'\")\n\n    def handle_error(page, test_name, error):\n        \"\"\"Handles errors by taking a screenshot, attaching it to Allure, and marking the test as failed.\"\"\"\n        os.makedirs(\"screenshots\", exist_ok=True)  # Ensure the screenshots directory exists\n        screenshot_path = f\"screenshots/{test_name}_error.png\"\n        page.screenshot(path=screenshot_path)\n        allure.attach.file(\n            screenshot_path,\n            name=f\"{test_name} Error Screenshot\",\n            attachment_type=allure.attachment_type.PNG\n        )\n        print(f\"Error during {test_name}: {error}\")\n>       pytest.fail(f\"Test failed: {test_name} - {error}\")\nE       Failed: Test failed: test_file_upload - ElementHandle.set_input_files: ENOENT: no such file or directory, access 'C:\\Users\\bv9653\\my-automation-project\\tests\\qq_import_template.xlsx'\n\nexcel_value.py:60: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"delete_output_dir","time":{"start":1746646754000,"stop":1746646754000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"_verify_url","time":{"start":1746646754000,"stop":1746646754000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"page","time":{"start":1746646754000,"stop":1746646755023,"duration":1023},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_url","time":{"start":1746646754000,"stop":1746646754000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"pytestconfig","time":{"start":1746646754000,"stop":1746646754000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"Failed: Test failed: test_file_upload - ElementHandle.set_input_files: ENOENT: no such file or directory, access 'C:\\Users\\bv9653\\my-automation-project\\tests\\qq_import_template.xlsx'","statusTrace":"self = <excel_value.TestAddressSearch object at 0x000001D59D02FE10>, page = <Page url='https://qq.att.com/landing'>\n\n    @pytest.mark.flaky(reruns=1, reruns_delay=1)\n    @allure.title(\"User can select 'Choose File' to upload\")\n    def test_file_upload(self, page):\n        try:\n    \n            test_case_number = 7  # Update test case number as needed\n    \n            with allure.step(\"Navigating to file upload page\"):\n                page.get_by_role(\"button\", name=\"att-logo-icon\").click()\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n    \n    # Upload the file using the actual input element\n            with allure.step(\"Uploading a file\"):\n                file_input = page.query_selector(\"input[type='file']\")  # Adjust selector as needed\n            if file_input:\n>               file_input.set_input_files(\"qq_import_template.xlsx\")\n\nexcel_value.py:336: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:2491: in set_input_files\n    self._sync(\nvenv\\Lib\\site-packages\\playwright\\_impl\\_element_handle.py:204: in set_input_files\n    await self._channel.send(\nvenv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000001D59CDAB910>\ncb = <function Channel.send.<locals>.<lambda> at 0x000001D59D3ED580>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.Error: ElementHandle.set_input_files: ENOENT: no such file or directory, access 'C:\\Users\\bv9653\\my-automation-project\\tests\\qq_import_template.xlsx'\n\nvenv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:528: Error\n\nDuring handling of the above exception, another exception occurred:\n\nself = <excel_value.TestAddressSearch object at 0x000001D59D02FE10>, page = <Page url='https://qq.att.com/landing'>\n\n    @pytest.mark.flaky(reruns=1, reruns_delay=1)\n    @allure.title(\"User can select 'Choose File' to upload\")\n    def test_file_upload(self, page):\n        try:\n    \n            test_case_number = 7  # Update test case number as needed\n    \n            with allure.step(\"Navigating to file upload page\"):\n                page.get_by_role(\"button\", name=\"att-logo-icon\").click()\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n    \n    # Upload the file using the actual input element\n            with allure.step(\"Uploading a file\"):\n                file_input = page.query_selector(\"input[type='file']\")  # Adjust selector as needed\n            if file_input:\n                file_input.set_input_files(\"qq_import_template.xlsx\")\n            else:\n                raise Exception(\"File input element not found.\")\n                #page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded\n            with allure.step(\"Scrolling down\"):\n                scroll_down(page)  # Scrolls down one screen height\n                page.wait_for_load_state(\"networkidle\")  # Waits until the DOM is fully loaded  # Wait 5 seconds after scrolling to let the page stabilize\n    \n    # Allow observation time before closing\n            with allure.step(\"Allowing more time for observation\"):\n                page.wait_for_timeout(10000)  # Wait an additional 10 seconds before closing\n    \n    \n        except Exception as e:\n>           handle_error(page, \"test_file_upload\", e)\n\nexcel_value.py:350: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\npage = <Page url='https://qq.att.com/landing'>, test_name = 'test_file_upload'\nerror = Error(\"ElementHandle.set_input_files: ENOENT: no such file or directory, access 'C:\\\\Users\\\\bv9653\\\\my-automation-project\\\\tests\\\\qq_import_template.xlsx'\")\n\n    def handle_error(page, test_name, error):\n        \"\"\"Handles errors by taking a screenshot, attaching it to Allure, and marking the test as failed.\"\"\"\n        os.makedirs(\"screenshots\", exist_ok=True)  # Ensure the screenshots directory exists\n        screenshot_path = f\"screenshots/{test_name}_error.png\"\n        page.screenshot(path=screenshot_path)\n        allure.attach.file(\n            screenshot_path,\n            name=f\"{test_name} Error Screenshot\",\n            attachment_type=allure.attachment_type.PNG\n        )\n        print(f\"Error during {test_name}: {error}\")\n>       pytest.fail(f\"Test failed: {test_name} - {error}\")\nE       Failed: Test failed: test_file_upload - ElementHandle.set_input_files: ENOENT: no such file or directory, access 'C:\\Users\\bv9653\\my-automation-project\\tests\\qq_import_template.xlsx'\n\nexcel_value.py:60: Failed","steps":[{"name":"Navigating to file upload page","time":{"start":1746646899443,"stop":1746646930322,"duration":30879},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Uploading a file","time":{"start":1746646930322,"stop":1746646930351,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[{"uid":"ac561b75ad320775","name":"test_file_upload Error Screenshot","source":"ac561b75ad320775.png","type":"image/png","size":64268},{"uid":"13e184ead572e313","name":"stdout","source":"13e184ead572e313.txt","type":"text/plain","size":174}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":2,"shouldDisplayMessage":true,"attachmentsCount":2},"afterStages":[{"name":"page::0","time":{"start":1746647091571,"stop":1746647091813,"duration":242},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"suite","value":"Address Search Test Suite"},{"name":"tag","value":"flaky(reruns=1, reruns_delay=1)"},{"name":"subSuite","value":"TestAddressSearch"},{"name":"host","value":"INBLR2791"},{"name":"thread","value":"21632-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"excel_value"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["flaky(reruns=1, reruns_delay=1)"]},"source":"12049052d1526377.json","parameterValues":[]}